# 1. 题目
202. 快乐数
编写一个算法来判断一个数 n 是不是快乐数。

「快乐数」定义为：

对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。
然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。
如果 可以变为  1，那么这个数就是快乐数。
如果 n 是快乐数就返回 true ；不是，则返回 false 。

 

示例 1：

输入：n = 19
输出：true
解释：
12 + 92 = 82
82 + 22 = 68
62 + 82 = 100
12 + 02 + 02 = 1
示例 2：

输入：n = 2
输出：false
# 2. 题解
# 3. 代码
```c++
class Solution {
public:
    bool isHappy(int n) {
        unordered_set<int> s;
        int num = n;
        while(num != 1) {
            int sum = 0;
            while(num != 0) {
                sum += (num % 10) * (num % 10);
                num /= 10;
            }
 
            auto it = s.find(sum);
            if(it != s.end()) {
                return false;
            } else {
                s.insert(sum);
            }
            num = sum;
        }
        return true;
    }
};
```
# 4. 心得
1. 快乐数的关键是存在循环；
2. set插入是Insert鸭；
3. 不要老想着创建变量来解决问题，能不用就不用。
